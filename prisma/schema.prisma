// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        String   @id @default(uuid())
  name      String
  domain    String?
  cnpj      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String?
  Team      Team[]

  @@map("companies")
}

model Team {
  id        String   @id @default(uuid())
  name      String
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
  Simulation Simulation[]

  @@map("teams")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String
  password  String
  role      Role      @default(USER)
  teamId    String
  team      Team      @relation(fields: [teamId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Session   Session[]

  @@map("users")
}

model Session {
  id           String   @id @default(uuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  refreshToken String
  expiresAt    DateTime
  createdAt    DateTime @default(now())
}

model Simulation {
  id        String   @id @default(uuid())
  name      String
  description String
  teamId String
  createdBy String
  status String @default("PENDING")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  team Team  @relation(fields: [teamId], references: [id])
  
  @@map("simulations")
}

enum Role {
  ADMIN
  MANAGER
  SECURITY_ANALYST
  USER
}

enum Status {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}
